If you are interested in running Hymmnoserver on your server, you will need 
the following:
- A webserver that supports PHP and Python via CGI
- PHP 5 (or higher)
- Python 3.4 (or higher)
- SQLite3

---

Setup should only take a few minutes. A brief overview of the process follows:
1 Check out a read-only copy of the Hymmnoserver source and put it where you
  want your Hymmnoserver instance's files to live

2 Assemble the SQLite file by following database/README

3 Ensure that the path to the Hymmnoserver code is configured, in the
  webserver's global settings

That's it. You've got a fully functional Hymmnoserver ready to go.

The database format should be stable, so if any changes are published, you can
just update your copy of the code and, if necessary, reassemble the database

---

If you want to provide patches or, if you have permission, commit updates,
*PLEASE* use a dedicated working copy of this repository, rather than a
production copy, which would contain your passwords.

When you need to alter something, just modify whatever content you feel needs
to be changed, then send a pull-request to the upstream project.

Once the patch has been applied to the repository, all mirrors will be able to
display your enhancements at their convenience. 


-Note-
You will find some Python scripts in database/; the ones intended for use are
add_words.py and link_words.py.

These are very hackishly constructed data-entry scripts that are provided
without documentation, warranty, or any guarantee of functionality. (They are
also quite a bit uglier than any code that would normally be considered
publishable by the author)

add_words.py is used to add new words to the database in a relatively fast
manner, though it uses legacy terminology and is rough in its presentation.

link_words.py is used to link two related words in the database; it requires
familiarity with the dialect/school numbering system.
